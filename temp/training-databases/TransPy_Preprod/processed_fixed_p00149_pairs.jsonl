{"input": "translate Python to C++: c = [1.1,0.6,0.2,0.0]\nr = [0,0,0,0,0,0,0,0]\nwhile 1:\n    try:\n        e = map(float, raw_input().split())\n        for i in range(2):\n            for j in range(4):\n                if e[i] >= c[j]:\n                \tr[i+2*j] += 1\n                \tbreak\n    except:\n        break\nfor i in range(0,8,2):\n\tprint r[i],r[i+1]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "\n#include <bits/stdc++.h>\n#include <stdio.h>\n#include <numeric>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<(int)(n);++i)\n#define repone(i,n) for(int i=1;i<(int)(n);++i)\n#define repo(i,o,n) for(int i=o;i<(int)(n);++i)\n#define Rep(j,n) for(int j=0;j<(int)(n);++j)\n#define Repo(j,o,n) for(int j=o;j<(int)(n);++j)\n#define Repone(j,n) for(int j=1;j<(int)(n);++j)\n#define all(v) (v).begin(),(v).end()\n#define rall(v) (v).rbegin(),(v).rend()\n#define int long long\n#define pb(a) push_back(a)\n#define pbpair(a,b) push_back(make_pair(a,b))\n#define MOD 1000000007\n#define INF 9223372036854775807\n#define pairint pair<int,int>\ntypedef pair< pairint , string> P;\nint gcd( int x, int y ){ return y ? gcd(y, x%y) : x; }\nbool pairCompare(const P& firstElof, const P& secondElof)\n{\n  if(firstElof.first.first!= secondElof.first.first)    return firstElof.first.first< secondElof.first.first;\nelse if(firstElof.first.second != secondElof.first.second)    return firstElof.first.second< secondElof.first.second;\nelse return false;\n}\nsigned main() {\ndouble x=0,y=0,z=0,w=0,n=0,m=0;\nint a[4]={0,0,0,0},b[4]={0,0,0,0};\nwhile(std::cin >> x>>y){\nif(x>=1.1)a[0]++;\nelse if(x>=0.6)a[1]++;\nelse if(x>=0.2)a[2]++;\nelse a[3]++;\n\nif(y>=1.1)b[0]++;\nelse if(y>=0.6)b[1]++;\nelse if(y>=0.2)b[2]++;\nelse b[3]++;\n}\nprintf(\"%d %d\\n%d %d\\n%d %d\\n%d %d\\n\",a[0],b[0],a[1],b[1],a[2],b[2],a[3],b[3]);\n}\n\n"}
{"input": "translate Python to C++: # -*- coding: utf-8 -*-\n\nimport sys\nimport os\n\nA = [0, 0]\nB = [0, 0]\nC = [0, 0]\nD = [0, 0]\n\nfor s in sys.stdin:\n    l, r = map(float, s.split())\n\n    if l >= 1.1:\n        A[0] += 1\n    elif l >= 0.6:\n        B[0] += 1\n    elif l >= 0.2:\n        C[0] += 1\n    else:\n        D[0] += 1\n\n    if r >= 1.1:\n        A[1] += 1\n    elif l >= 0.6:\n        B[1] += 1\n    elif l >= 0.2:\n        C[1] += 1\n    else:\n        D[1] += 1\n\nprint(*A)\nprint(*B)\nprint(*C)\nprint(*D)\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\nusing namespace std;\n\n\nint main(int argc, const char * argv[]) {\n    \n    int leftArray[4],rightArray[4];\n    \n    double left,right;\n    while (cin >> left >> right) {\n        if(left >= 1.1) leftArray[0]++;\n        else if(left >= 0.6) leftArray[1]++;\n        else if(left >= 0.2) leftArray[2]++;\n        else leftArray[3]++;\n        \n        if(right >= 1.1) rightArray[0]++;\n        else if(right >= 0.6) rightArray[1]++;\n        else if(right >= 0.2) rightArray[2]++;\n        else rightArray[3]++;\n            \n    }\n    \n    for(int i=0;i<4;i++){\n        cout << leftArray[i] << \" \" << rightArray[i] << endl;\n    }\n    \n    return 0;\n}"}
{"input": "translate Python to C++: import sys\ndef f(x):\n  x = float(x)\n  f = 0\n  if x<.2: f = 3\n  elif x<.6: f = 2\n  elif x<1.1: f = 1\n  return f\n\nC1=[0]*4\nC2=[0]*4\nfor s in sys.stdin:\n  L, R = map(f,s.split())\n  C1[L]+=1\n  C2[R]+=1\nfor a,b in zip(C1,C2):\n  print a,b\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n\tdouble l, r;\n\tint la=0,lb=0,lc=0,ld=0;\n\tint ra=0,rb=0,rc=0,rd=0;\n\twhile(cin >> l >> r){\n\t\tif(l >= 1.1){\n\t\t\tla++;\n\t\t}\n\t\telse if(l >= 0.6){\n\t\t\tlb++;\n\t\t}\n\t\telse if(l >= 0.2){\n\t\t\tlc++;\n\t\t}\n\t\telse{\n\t\t\tld++;\n\t\t}\n\n\t\tif(r >= 1.1){\n\t\t\tra++;\n\t\t}\n\t\telse if(r >= 0.6){\n\t\t\trb++;\n\t\t}\n\t\telse if(r >= 0.2){\n\t\t\trc++;\n\t\t}\n\t\telse{\n\t\t\trd++;\n\t\t}\n\t}\n\tcout << la << \" \" << ra << endl;\n\tcout << lb << \" \" << rb << endl;\n\tcout << lc << \" \" << rc << endl;\n\tcout << ld << \" \" << rd << endl;\n}"}
{"input": "translate Python to C++: from bisect import bisect\nD = [0.2,0.6,1.1]\nL = [0]*4\nR = [0]*4\nwhile True:\n    try:\n        left,right = map(float,raw_input().split())\n    except:\n        break\n    L[bisect(D,left)] += 1\n    R[bisect(D,right)] += 1\nfor left,right in zip(L,R)[::-1]:\n    print left,right\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <functional>\n#include <numeric>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <utility>\n#include <sstream>\n#include <complex>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(long long i=(a);i<(b);i++)\n#define REP(i,N) for(long long i=0;i<(N);i++)\n#define ALL(s) (s).begin(),(s).end()\n#define fi first\n#define se second\n\n#define PI acos(-1.0)\n#define INF 1000000007\n#define EPS 1e-10\n\ntypedef long long ll;\ntypedef pair<ll, ll> P;\ntypedef pair<double, double> PD;\ntypedef pair<string, ll> PS;\ntypedef vector<ll> V;\n\nint co[2][4];\ndouble l, r;\n\nint main(){\n\twhile (cin >> l >> r){\n\t\tif (1.1 - l < EPS) co[0][0]++;\n\t\telse if (0.6 - l < EPS) co[0][1]++;\n\t\telse if (0.2 - l < EPS) co[0][2]++;\n\t\telse co[0][3]++;\n\t\tif (1.1 - r < EPS) co[1][0]++;\n\t\telse if (0.6 - r < EPS) co[1][1]++;\n\t\telse if (0.2 - r < EPS)\tco[1][2]++;\n\t\telse co[1][3]++;\n\t}\n\tREP(j, 4){\n\t\tcout << co[0][j] << \" \" << co[1][j] << endl;\n\t}\n}"}
{"input": "translate Python to C++: def hantei(l):\n    if l >= 1.1:\n        return 'A'\n    elif 0.6 <= l < 1.1:\n        return 'B'\n    elif 0.2 <= l < 0.6:\n        return 'C'\n    elif 0.2 < l:\n        return 'D'\n\nldic = {'A':0, 'B':0, 'C':0, 'D':0}\nrdic = {'A':0, 'B':0, 'C':0, 'D':0}\nls = []\nwhile True:\n    try:\n        l,r = map(float,raw_input().split())\n        ls.append((l,r))\n    except EOFError:\n        break\n        \nfor i,j in ls:\n    ldic[hantei(i)] += 1\n    rdic[hantei(j)] += 1\n    \nfor L,R in zip(sorted(ldic),sorted(rdic)):\n    print L,R \nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\n#define loop(i,a,b) for(int i=(a); i<(int)(b); i++)\n#define rep(i,b) loop(i,0,b)\n#define all(c) (c).begin(), (c).end()\n \ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\n\nint main() {\n  double a, b, l[4] = {}, r[4] = {};\n  while(cin >> a >> b) {\n    if(a >= 1.1) l[0]++;\n    else if(a >= 0.6) l[1]++;\n    else if(a >= 0.2) l[2]++;\n    else l[3]++;\n\n    if(b >= 1.1) r[0]++;\n    else if(b >= 0.6) r[1]++;\n    else if(b >= 0.2) r[2]++;\n    else r[3]++;\n  }\n  rep(i, 4) cout << l[i] << ' ' << r[i] << endl;\n}"}
{"input": "translate Python to C++: r = [[0,0] for i in range(4)]\nwhile True:\n    try:\n        e = map(float, raw_input().split())\n        for i in [0,1]: \n            for j in [1.1,0.6,0.2,0.0]:\n                if e[i] >= j:\n                \tr[j][i] += 1\n                \tbreak\n    except:\n        break\nfor i in range(4):\n\tprint r[i][0],r[i][1]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<stdio.h>\n\nint main(){\nint x1,x2,y1,y2;\nint A[5]={},B[5]={};\n\nwhile(scanf(\"%d.%d %d.%d\",x1,x2,y1,y2)!=EOF)\n{\nif(x1>=2)A[0]++;\nelse if(x1==1&&x2>=1)A[0]++;\nelse if(x1==0&&x2>=6)A[1]++;\nelse if(x1==0&&x2>=2)A[2]++;\nelse if(x1==0&&x2<2)A[3]++;\n\nif(Y1>=2)B[0]++;\nelse if(y1==1&&y2>=1)B[0]++;\nelse if(y1==0&&y2>=6)B[1]++;\nelse if(y1==0&&y2>=2)B[2]++;\nelse if(y1==0&&y2<2)B[3]++;\n}\nfor(int i=0;i<3;i++)\nprintf(\"%d %d\\n\"A[i],B[i]);\n\n\nreturn 0;\n}"}
{"input": "translate Python to C++: #! -*- coding:utf-8 -*-\n\nans = [ [0, 0] for _ in xrange(4) ]\n\ndef get(x):\n\tif x >= 1.1: return 0\n\tif x >= 0.6: return 1\n\tif x >= 0.2: return 2\n\treturn 3\n\nwhile True:\n\ttry:\n\t\ta, b = [ float(_) for _ in raw_input().split() ]\n\texcept:\n\t\tbreak\n\tans[get(a)][0] += 1\n\tans[get(b)][1] += 1\n\nfor an in ans:\n\tprint an[0], an[1]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n\nusing namespace std;\n\nint main(void){\n    int i,j,k,l;\n    int left[4]={0},right[4]={0};\n    double data_l,data_r;\n    \n    while(cin>>data_l>>data_r){\n        if(data_l>=1.1){\n            left[0]++;\n        }\n        else if(data_l<1.1&&data_l>=0.6){\n            left[1]++;\n        }\n        else if(data_l<0.6&&data_l>=0.2){\n            left[2]++;\n        }\n        else if(data_l<0.2){\n            left[3]++;\n        }\n        if(data_r>=1.1){\n            right[0]++;\n        }\n        else if(data_r<1.1&&data_r>=0.6){\n            right[1]++;\n        }\n        else if(data_r<0.6&&data_r>=0.2){\n            right[2]++;\n        }\n        else if(data_r<0.2){\n            right[3]++;\n        }\n    }\n    for(i=0;i<4;i++){\n        cout<<left[i]<<\" \"<<right[i]<<endl;\n    }\n    return(0);\n}"}
{"input": "translate Python to C++: def hantei(l):\n    if l >= 1.1:\n        return 'A'\n    elif 0.6 <= l < 1.1:\n        return 'B'\n    elif 0.2 <= l < 0.6:\n        return 'C'\n    elif l  < 0.2 :\n        return 'D'\n\nldic = {'A':0, 'B':0, 'C':0, 'D':0}\nrdic = {'A':0, 'B':0, 'C':0, 'D':0}\nls = []\nwhile True:\n    try:\n        l,r = map(float,raw_input().split())\n        ls.append((l,r))\n    except EOFError:\n        break\n        \nfor i,j in ls:\n    ldic[hantei(i)] += 1\n    rdic[hantei(j)] += 1\n    \nfor L,R in zip(sorted(ldic),sorted(rdic)):\n    print L,R \nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <utility>\n\n#define ll (long long)\n#define REP(i,n) for(int i = 0;i<(int)n;i++)\n#define FOR(i,a,b) for(int i = (a);i < (b);i++)\n#define RFOR(i,a,b) for(int i = (a);i>(b);i--)\n#define COUNTER int i= 0,j = 0,k = 0,l = 0;\n\nusing namespace std;\n\nint main (void){\n    \n    COUNTER\n    double eyseight[41][2];\n    int answer[41][2] = {0};\n    \n    while(cin >> eyseight[i][0] >> eyseight[i][1])\n    {\n        int j = 0;\n        while(j != 2)\n        {\n            if(eyseight[i][j] >= 1.1)\n                answer[0][j]++;\n            else if(eyseight[i][j] < 1.1 && eyseight[i][j] >= 0.6)\n                answer[1][j]++;\n            else if (eyseight[i][j] < 0.6 && eyseight[i][j] >=0.2)\n                answer[2][j]++;\n            else\n                answer[3][j]++;\n            j++;\n        }\n        i++;\n    }\n    REP(j,i)\n    {\n        cout << answer[j][0] <<\" \" << answer[j][1] << endl;\n    }\n    return 0;\n}"}
{"input": "translate Python to C++: lr = [0 for i in range(8)]\nwhile True:\n    try:\n        a,b = map(float,input().split())\n    except:\n        break\n    if a >= 1.1:\n        lr[0] += 1\n    elif a >= 0.6:\n        lr[2] += 1\n    elif a >= 0.2:\n        lr[4] += 1\n    else:\n        lr[6] += 1\n    if b >= 1.1:\n        lr[1] += 1\n    elif b >= 0.6:\n        lr[3] += 1\n    elif b >= 0.2:\n        lr[5] += 1\n    else:\n        lr[7] += 1\nprint(lr[0],lr[1])\nprint(lr[2],lr[3])\nprint(lr[4],lr[5])\nprint(lr[6],lr[7])\n    \n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <bits/stdc++.h>\nusing namespace std;\nint main(void){\n    double left,right;\n    int leftA,leftB,leftC,leftD,rightA,rightB,rightC,rightD;\n    leftA=0;\n    leftB=0;\n    leftC=0;\n    leftD=0;\n    rightA=0;\n    rightB=0;\n    rightC=0;\n    rightD=0;\n    while (cin>>left>>right) {\n        if (left>=1.1) {\n            leftA++;\n        } else if (left>=0.6 && left<1.1) {\n            leftB++;\n        } else if (left>=0.2 && left<0.6) {\n            leftC++;\n        } else if (left<0.2) {\n            leftD++;\n        }\n        if (right>=1.1) {\n            rightA++;\n        } else if (right>=0.6 && right<1.1) {\n            rightB++;\n        } else if (right>=0.2 && right<0.6) {\n            rightC++;\n        } else if (right<0.2) {\n            rightD++;\n        }\n    }\n    cout<<leftA<<\" \"<<rightA<<endl;\n    cout<<leftB<<\" \"<<rightB<<endl;\n    cout<<leftC<<\" \"<<rightC<<endl;\n    cout<<leftD<<\" \"<<rightD<<endl;\n}\n\n"}
{"input": "translate Python to C++: ld, rd = [0, 0, 0, 0], [0, 0, 0, 0]\nwhile True:\n    try:\n        l, r = map(float, input().split())\n        if l < 0.2:\n            ld[3] += 1\n        elif l < 0.6:\n            ld[2] += 1\n        elif l < 1.1:\n            ld[1] += 1\n        else:\n            ld[0] += 1\n\n        if r < 0.2:\n            rd[3] += 1\n        elif r < 0.6:\n            rd[2] += 1\n        elif r < 1.1:\n            rd[1] += 1\n        else:\n            rd[0] += 1\n\n    except:\n        break\n\nfor l, r in zip(ld, rd):\n    print(l, r)\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n#include <vector>\nusing namespace std;\n\ntypedef vector <int> VI;\n\nint check( double s )\n{\n\tif ( s >= 1.1 ) return 0;\n\telse if ( s >= 0.6 ) return 1;\n\telse if ( s >= 0.2 ) return 2;\n\telse if ( s < 0.2 ) return 3;\n\treturn 4;\n}\n\nint main( void )\n{\n\tVI lefts(5,0), rights(5,0);\n\tdouble left, right;\n\twhile ( cin >> left >> right )\n\t{\n\t\tint l = check( left );\n\t\tlefts[l]++;\n\t\tint r = check( right );\n\t\trights[r]++;\n\t}\n\tfor ( int i = 0; i < 4; i++ ) cout << lefts[i] << \" \" << rights[i] << endl;\n\treturn 0;\n}"}
{"input": "translate Python to C++: def hantei(l):\n    if l >= 1.1:\n        return 'A'\n    elif 0.6 <= l < 1.1:\n        return 'B'\n    elif 0.2 <= l < 0.6:\n        return 'C'\n    elif l  < 0.2 :\n        return 'D'\n\nldic = {'A':0, 'B':0, 'C':0, 'D':0}\nrdic = {'A':0, 'B':0, 'C':0, 'D':0}\nls = []\nwhile True:\n    try:\n        l,r = map(float,raw_input().split())\n        ls.append((l,r))\n    except EOFError:\n        break\n        \nfor i,j in ls:\n    ldic[hantei(i)] += 1\n    rdic[hantei(j)] += 1\n    \nfor L,R in zip(sorted(ldic),sorted(rdic)):\n    print ldic[L],rdic[R] \nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n\nusing namespace std;\n\n#define rep(i,n) for(int i=0; i<(n); i++)\n#define repc(i,s,e) for(int i=(s); i<(e); i++)\n#define pb(n) push_back((n))\n#define mp(n,m) make_pair((n),(m))\n#define all(r) r.begin(),r.end()\n#define fi first\n#define se second\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<ll> vl;\ntypedef vector<vl> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n\n\n\n\nint main() {\n\tint a[4][2] = {};\n\tdouble b[2];\n\twhile (cin >> b[0] >> b[1]) {\n\t\trep(i, 2) {\n\t\t\tif (b[i] >= 1.1)a[0][i]++;\n\t\t\telse if (b[i] >= 0.6)a[1][i]++;\n\t\t\telse if (b[i] >= 0.2)a[2][i]++;\n\t\t\telse a[3][i]++;\n\t\t}\n\t}\n\trep(i, 4) {\n\t\tcout << a[i][0] << \" \" << a[i][1] << endl;\n\t}\n}"}
{"input": "translate Python to C++: c = [1.1,0.6,0.2,0.0]\nr = [0 for i in range(8)]\nwhile 1:\n    try:\n        e = map(float, raw_input().split())\n        for i in range(2):\n            for j in range(4):\n                if e[i] >= c[j]:\n                \tr[i+2*j] += 1\n                \tbreak\n    except:\n        break\nfor i in range(0,8,2):\n\tprint r[i],r[i+1]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\nusing namespace std;\n\ndouble leye, reye;\nint A[2], B[2], C[2], D[2];\n\nint main() {\n    for (int i = 0; i < 40; i++) { \n            cin >> leye;\n            if (leye >= 1.1) A[0]++;\n            else if (leye >= 0.6 && leye < 1.1) B[0]++;\n            else if (leye >= 0.2 && leye < 0.6) C[0]++;\n            else if (leye < 0.2) D[0]++;\n            \n            cin >> reye;\n            if (reye >= 1.1) A[1]++;\n            else if (reye >= 0.6 && reye < 1.1) B[1]++;\n            else if (reye >= 0.2 && reye < 0.6) C[1]++;\n            else if (reye < 0.2) D[1]++;\n    }\n    \n    cout << A[0] << \" \" << A[1];\n    cout << B[0] << \" \" << B[1];\n    cout << C[0] << \" \" << C[1];\n    cout << D[0] << \" \" << D[1];\n    \n    return 0;\n}"}
{"input": "translate Python to C++: E=[[0 for j in range(4)]for i in range(2)]\nwhile True:\n  try:\n    p =list(map(float,input().split()))\n  except:\n    break\n  for i in range(2):\n    if p[i]>=1.1:\n      E[i][0]+=1\n    elif p[i]>=0.6:\n      E[i][1]+=1\n    elif p[i]>=0.2:\n      E[i][2]+=1\n    else:\n      E[i][3]+=1\n      \nfor i in range(4):\n  print(E[0][i], E[1][i])\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<iostream>\nusing namespace std;\n \nint main(){\n    double l, r;\n    int l_cnt[4] = {}, r_cnt[4] = {};\n    while(cin >> l >> r){\n        if(l >= 1.1) l_cnt[0]++;\n        else if(l >= 0.6) l_cnt[1]++;\n        else if(l >= 0.2) l_cnt[2]++;\n        else l_cnt[3]++;\n \n        if(r >= 1.1) r_cnt[0]++;\n        else if(r >= 0.6) r_cnt[1]++;\n        else if(r >= 0.2) r_cnt[2]++;\n        else r_cnt[3]++;\n    }\n \n    for(int i = 0; i < 4; i++){\n        cout << l_cnt[i] << \" \" << r_cnt[i] << endl;\n    }\n \n}"}
{"input": "translate Python to C++: # -*- coding: utf-8 -*-\n\nimport sys\nimport os\n\nA = [0, 0]\nB = [0, 0]\nC = [0, 0]\nD = [0, 0]\n\nfor s in sys.stdin:\n    l, r = map(float, s.split())\n\n    if l >= 1.1:\n        A[0] += 1\n    elif l >= 0.6:\n        B[0] += 1\n    elif l >= 0.2:\n        C[0] += 1\n    else:\n        D[0] += 1\n\n    if r >= 1.1:\n        A[1] += 1\n    elif r >= 0.6:\n        B[1] += 1\n    elif r >= 0.2:\n        C[1] += 1\n    else:\n        D[1] += 1\n\nprint(*A)\nprint(*B)\nprint(*C)\nprint(*D)\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n\nint getClass(float e)\n{\n\tif (e >= 1.1) return 0;\n\telse if (e >= 0.6) return 1;\n\telse if (e >= 0.2) return 2;\n\telse return 3;\n}\n\nint main()\n{\n\tint L[4] = {0,0,0,0}, R[4] = {0,0,0,0};\n\tfloat l, r;\n\twhile (std::cin >> l >> r) {\n\t\tL[getClass(l)]++; R[getClass(r)]++;\n\t}\n\tfor (int i=0; i<4; i++) std::cout << L[i] << \" \" << R[i] << std::endl;\n\treturn 0;\n}\n\n"}
{"input": "translate Python to C++: li, ri = [0, 0, 0, 0], [0, 0, 0, 0]\nwhile True:\n    try:\n        l, r = map(float, input().split())\n    except:\n        break\n    \n    if l < 0.2:\n        li[3] += 1\n    elif l < 0.6:\n        li[2] += 1\n    elif l < 1.1:\n        li[1] += 1\n    else:\n        li[0] += 1\n \n    if r < 0.2:\n        ri[3] += 1\n    elif r < 0.6:\n        ri[2] += 1\n    elif r < 1.1:\n        ri[1] += 1\n    else:\n        ri[0] += 1\n\nfor l, r in zip(li, ri):\n    print(l, r)\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<iostream>\nusing namespace std;\n\nvoid main() {\n\tint right_a = 0, right_b = 0, right_c = 0, right_d = 0;\n\tint left_a = 0, left_b = 0, left_c = 0, left_d = 0;\n\tdouble right_eye, left_eye;\n\twhile (cin >> left_eye >> right_eye) {\n\t\tif (left_eye >= 1.1)left_a++;\n\t\telse if (left_eye >= 0.6&&left_eye < 1.1)left_b++;\n\t\telse if (left_eye >= 0.2&&left_eye < 0.6)left_c++;\n\t\telse if (left_eye < 0.2)left_d++;\n\t\tif (right_eye >= 1.1)right_a++;\n\t\telse if (right_eye >= 0.6&&right_eye < 1.1)right_b++;\n\t\telse if (right_eye >= 0.2&&right_eye < 0.6)right_c++;\n\t\telse if (right_eye < 0.2)right_d++;\n\t}\n\tcout << left_a << ' ' << right_a << endl;\n\tcout << left_b << ' ' << right_b << endl;\n\tcout << left_c << ' ' << right_c << endl;\n\tcout << left_d << ' ' << right_d << endl;\n}"}
{"input": "translate Python to C++: Res = [[0,0,0,0],[0,0,0,0]]\nwhile True:\n    try:\n        l,r = map(float,input().split())\n        if l < 0.2:\n            Res[0][3] += 1\n        elif l < 0.6:\n            Res[0][2] += 1\n        elif l < 1.1:\n            Res[0][1] += 1\n        else:\n            Res[0][0] += 1\n\n        if r < 0.2:\n            Res[1][3] += 1\n        elif r < 0.6:\n            Res[1][2] += 1\n        elif r < 1.1:\n            Res[1][1] += 1\n        else:\n            Res[1][0] += 1\n    except:\n        for i in range(4):\n            ans = str(Res[0][i]) + \" \" + str(Res[1][i])\n            print(ans)\n        break\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main (int argc, char *argv[]) {\n    double lhs, rhs;\n    int al = 0;\n    int ar = 0;\n    int bl = 0;\n    int br = 0;\n    int cl = 0;\n    int cr = 0;\n    int dl = 0;\n    int dr = 0;\n    while (cin>>lhs>>rhs, lhs||rhs) {\n        if (lhs >= 1.1) al++;\n        if (rhs >= 1.1) ar++;\n        if (1.1 > lhs && lhs >= 0.6) bl++;\n        if (1.1 > rhs && rhs >= 0.6) br++;\n        if (0.6 > lhs && lhs >= 0.2) cl++;\n        if (0.6 > rhs && rhs >= 0.2) cr++;\n        if (0.2 > lhs && lhs >= 0.1) dl++;\n        if (0.2 > rhs && rhs >= 0.1) dr++;\n    }\n    cout<<al<<\" \"<<ar<<endl;\n    cout<<bl<<\" \"<<br<<endl;\n    cout<<cl<<\" \"<<cr<<endl;\n    cout<<dl<<\" \"<<dr<<endl;\n    return 0;\n}\n"}
{"input": "translate Python to C++: def get_input():\n    while True:\n        try:\n            yield ''.join(input())\n        except EOFError:\n            break\n\ndef check(n):\n    if n >= 11:\n        return 0\n    elif n >= 6:\n        return 1\n    elif n >= 2:\n        return 2\n    else:\n        return 3\n\nN = list(get_input())\n\ncntL = [0,0,0,0]\ncntR = [0,0,0,0]\n\nfor lll in range(len(N)):\n    l,r = [int(float(i)*10) for i in N[lll].split()]\n    cntL[check(l)] += 1\n    cntR[check(r)] += 1\n\nfor i in range(4):\n    print(cntL[i],cntR[i])\n\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<iostream>\n#include<cstdio>\nusing namespace std;\nint main(void)\n{\n\tdouble l[40]={0},r[40]={0};int A=0,A2=0,B=0,B2=0,C=0,C2=0,D=0,D2=0;\n\tfor(int i=0;i<40;i++)\n\t{\n\t\tscanf(\"%lf %lf\",&l[i],&r[i]);\n\t\tif(l[i]>=1.1)\n\t\t{\n\t\t\tA=A+1;\n\t\t}\n\t\telse if(l[i]>=0.6)\n\t\t{\n\t\t\tB=B+1;\n\t\t}\n\t\telse if(l[i]>=0.2)\n\t\t{\n\t\t\tC=C+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tD=D+1;\n\t\t}\n\t\tif(r[i]>=1.1)\n\t\t{\n\t\t\tA2=A2+1;\n\t\t}\n\t\telse if(r[i]>=0.6)\n\t\t{\n\t\t\tB2=B2+1;\n\t\t}\n\t\telse if(r[i]>=0.2)\n\t\t{\n\t\t\tC2=C2+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tD2=D2+1;\n\t\t}\n\t}\n\tprintf(\"%d %d\\n%d %d\\n%d %d\\n%d %d\\n\",A,A2,B,B2,C,C2,D,D2);\n\treturn 0;\n}\n"}
{"input": "translate Python to C++: def hantei(l):\n    if l >= 1.1:\n        return 'A'\n    elif 0.6 <= l < 1.1:\n        return 'B'\n    elif 0.2 <= l < 0.6:\n        return 'C'\n    elif l  < 0.2 :\n        return 'D'\n\nldic = {'A':0, 'B':0, 'C':0, 'D':0}\nrdic = {'A':0, 'B':0, 'C':0, 'D':0}\nls = []\nwhile True:\n    try:\n        l,r = map(float,raw_input().split())\n        ls.append((l,r))\n    except EOFError:\n        break\n        \nfor i,j in ls:\n    ldic[hantei(i)] += 1\n    rdic[hantei(j)] += 1\n    \nfor L,R in zip(sorted(ldic.items(),key = lambda x:x[1]),sorted(rdic.items(),key = lambda x:x[1])):\n    print L,R\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\nusing namespace std;\n\nint la, lb, lc, ld, ra, rb, rc, rd;\ndouble l[40], r[40];\nint n = 0;\n\nint main() {\n  \n  for(int i=0; cin >> l[i] >> r[i]; i++, n++);\n  \n  for(int i=0; i<n; i++) {\n    if( 1.1 <= l[i] ) la ++;\n    else if( 0.6 <= l[i] ) lb ++;\n    else if( 0.2 <= l[i] ) lc ++;\n    else if( l[i] < 0.2  ) ld ++;\n    if( 1.1 <= r[i] ) ra ++;\n    else if( 0.6 <= r[i] ) rb ++;\n    else if( 0.2 <= r[i] ) rc ++;\n    else if( r[i] < 0.2  ) rd ++;\n  }\n    cout << la << \" \" << ra << endl;\n    cout << lb << \" \" << rb << endl;\n    cout << lc << \" \" << rc << endl;\n    cout << ld << \" \" << rd << endl;\n  \n  return 0;\n}"}
{"input": "translate Python to C++: def hantei(l):\n    if l >= 1.1:\n        return 'A'\n    elif 0.6 <= l < 1.1:\n        return 'B'\n    elif 0.2 <= l < 0.6:\n        return 'C'\n    elif 0.2 < l:\n        return 'D'\n\nldic = {'A':0, 'B':0, 'C':0, 'D':0}\nrdic = {'A':0, 'B':0, 'C':0, 'D':0}\nls = []\nwhile True:\n    try:\n        l,r = map(float,raw_input().split())\n        ls.append((l,r))\n    except EOFError:\n        break\nfor l,r in ls:\n    ldic[hantei(l)] += 1\n    rdic[hantei(r)] += 1\n    \nfor L,R in zip(sorted(ldic),sorted(rdic)):\n    print L,R \nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    double l,r;\n    int rn[4]={0},ln[4]={0};\n    while(cin>>l>>r)\n    {\n        int ls=0;\n        if(l>=0.2)ls++;\n        if(l>=0.6)ls++;\n        if(l>=1.1)ls++;\n        ln[ls]++;\n        int rs=0;\n        if(r>=0.2)rs++;\n        if(r>=0.6)rs++;\n        if(r>=1.1)rs++;\n        rn[rs]++;\n    }\n    for(int i=3;i>=0;--i){\n        cout<<ln[i]<<\" \"<<rn[i]<<endl;\n    }\n    return 0;\n}"}
{"input": "translate Python to C++: # AOJ 0149: Eye Test\n# Python3 2018.6.17 bal4u\n\ntbl = [[0 for j in range(4)] for i in range(2)]\nwhile True:\n\ttry: p = list(map(float, input().split()))\n\texcept: break\n\tfor i in range(2):\n\t\tif p[i] >= 1.1: tbl[i][0] += 1\n\t\telif p[i] >= 0.6: tbl[i][1] += 1\n\t\telif p[i] >= 0.2: tbl[i][2] += 1\n\t\telse: tbl[i][3] += 1\nfor i in range(4):\n\tprint(tbl[0][i], tbl[1][i])\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ndouble arr[] = {-9999999, 0.2, 0.6, 1.1, 999999999};\n\nint main() {\n  \n  double a, b;\n  int cntL[4] = {};\n  int cntR[4] = {};\n  while(cin >> a >> b) {\n    for(int i=0; i<4; i++) {\n      if(arr[i] <= a && a < arr[i+1]) cntL[3-i] ++;\n      if(arr[i] <= b && b < arr[i+1]) cntR[3-i] ++;\n    }\n  }\n  for(int i=0; i<4; i++)\n    cout << cntL[i] << \" \" << cntR[i] << endl;\n  \n  return 0;\n}"}
{"input": "translate Python to C++: # Aizu Problem 00149: Eye Test\n#\nimport sys, math, os, copy\n\n# read input:\nPYDEV = os.environ.get('PYDEV')\nif PYDEV==\"True\":\n    sys.stdin = open(\"sample-input.txt\", \"rt\")\n\n\ndef get_judgement(x):\n    if x >= 1.1:\n        return \"A\"\n    elif x >= .6:\n        return \"B\"\n    elif x >= .2:\n        return \"C\"\n    else:\n        return \"D\"\n\n    \ncount = {char: {\"left\": 0, \"right\": 0} for char in ['A', 'B', 'C', 'D']}\nfor line in sys.stdin:\n    left, right = [float(_) for _ in line.split()]\n    count[get_judgement(left)][\"left\"] += 1\n    count[get_judgement(right)][\"right\"] += 1\n\n\nfor char in ['A', 'B', 'C', 'D']:\n    print(count[char][\"left\"], count[char][\"right\"])\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n  vector<double> left_eye;\n  vector<double> right_eye;\n\n  int result1[4] = {0};\n  int result2[4] = {0};\n\n  double a,b;\n\n  while(cin>>a>>b){\n    left_eye.push_back(a);\n    right_eye.push_back(b);\n  }\n\n  for(double e : left_eye){\n    if(e >= 1.1){\n      result1[0] += 1;\n    }\n    else if(e >= 0.6 && e < 1.1){\n      result1[1] += 1;\n    }\n    if(e >= 0.2 && e < 0.6){\n      result1[2] += 1;\n    }\n    if(e < 0.2){\n      result1[3] += 1;\n    }\n  }\n\n  for(double e : right_eye){\n    if(e >= 1.1){\n      result2[0] += 1;\n    }\n    else if(e >= 0.6 && e < 1.1){\n      result2[1] += 1;\n    }\n    if(e >= 0.2 && e < 0.6){\n      result2[2] += 1;\n    }\n    if(e < 0.2){\n      result2[3] += 1;\n    }\n  }\n\n  for(int i = 0;i < 4;++i){\n    cout<<result1[i]<<\" \"<<result2[i]<<endl;\n  }\n\n  return 0;\n}\n"}
{"input": "translate Python to C++: def Judge(i,A):\n    if i<0.2:A[3]+=1\n    elif i<0.6:A[2]+=1\n    elif i<1.1:A[1]+=1\n    else:A[0]+=1\n\nL,R=[0]*4,[0]*4\nwhile True:\n    try:\n        l,r=map(float,raw_input().split())\n    except EOFError:\n        break\n    Judge(l,L)\n    Judge(r,R)\nfor i in range(4):\n    print L[i],R[i]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\nusing namespace std;\nint m[4][2];\nint main()\n{\n  float l,r;\n  while(cin >> l >> r){\n    if(l > 1.1) m[0][0]++;\n    else if(l > 0.6) m[1][0]++;\n    else if(l > 0.2) m[2][0]++;\n    else m[3][0]++;\n    if(r > 1.1) m[0][1]++;\n    else if(r > 0.6) m[1][1]++;\n    else if(r > 0.2) m[2][1]++;\n    else m[3][1]++;\n  }\n  int i;\n  for(i=0;i<4;i++){\n    cout << m[i][0] << \" \" << m[i][1] << endl;\n  }\n  return 0;\n}"}
{"input": "translate Python to C++: import sys\nimport math\nal=0\nbl=0\ncl=0\ndl=0\nar=0\nbr=0\ncr=0\ndr=0\ntry:\n    while True:\n        l,r=map(float,input().split())\n        if(l>=1.1):\n            al=al+1\n        elif(l>=0.6 and l<1.1):\n            bl=bl+1\n        elif(l>=0.2 and l<0.6):\n            cl=cl+1\n        else:\n            dl=dl+1\n        if(r>=1.1):\n            ar=ar+1\n        elif(r>=0.6 and r<1.1):\n            br=br+1\n        elif(r>=0.2 and r<0.6):\n            cr=cr+1\n        else:\n            dr=dr+1\nexcept EOFError:\n    pass\nprint(str(al)+' '+str(ar))\nprint(str(bl)+' '+str(br))\nprint(str(cl)+' '+str(cr))\nprint(str(dl)+' '+str(dr))\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <stdio.h>\n\nint main( ) {\n\n\tdouble eye[ 40 ][ 2 ]; \n\tint num = 0;\n\tint lr_change = 0;\n\tint al=0;\n\tint ar=0;\n\tint bl=0;\n\tint br=0;\n\tint cl=0;\n\tint cr=0;\n\tint dl=0;\n\tint dr=0;\n\n\twhile( 1 ) {\n\n\t\tscanf(\"%lf\",& eye[ num ][lr_change] );\n\n\t\tif( eye[ num ][lr_change] == EOF) {\n\t\t\tbreak;\n\t\t}\n\n\t\tif( eye[ num ][lr_change] <= 1,1 ) {\n\t\t\tif( lr_change == 0 ){\n\t\t\t\tal++;\n\t\t\t}else{\n\t\t\t\tar++;\n\t\t\t}\n\t\t}else if( 0.6 <= eye[ num ][lr_change] && eye[ num ][lr_change] < 1.1 ){\n\t\t\tif( lr_change == 0 ){\n\t\t\t\tbl++;\n\t\t\t}else{\n\t\t\t\tbr++;\n\t\t\t}\n\t\t}else if( 0.2 <= eye[ num ][lr_change] && eye[ num ][lr_change] < 0.6 ){\n\t\t\tif( lr_change == 0 ){\n\t\t\t\tcl++;\n\t\t\t}else{\n\t\t\t\tcr++;\n\t\t\t}\n\t\t}else if( eye[ num ][lr_change] < 0.2 ){\n\t\t\tif( lr_change == 0 ){\n\t\t\t\tdl++;\n\t\t\t}else{\n\t\t\t\tdr++;\n\t\t\t}\n\t\t}\n\n\t\tif( lr_change == 0 ) {\n\t\t\tlr_change = 1;\n\t\t}else{\n\t\t\tnum++;\n\t\t\tlr_change = 0;\n\t\t}\n\n\t}\n\n\tprintf(\"%d %d\\n\",al,ar);\n\tprintf(\"%d %d\\n\",bl,br);\n\tprintf(\"%d %d\\n\",cl,cr);\n\tprintf(\"%d %d\\n\",dl,dr);\n\n\treturn 0;\n}"}
{"input": "translate Python to C++: # -*- coding: utf-8 -*-\n\"\"\"\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0149\n\n\"\"\"\nimport sys\nfrom sys import stdin\nfrom collections import defaultdict\ninput = stdin.readline\n\n\ndef process_data(result, rank):\n    if result >= 1.1:\n        rank['A'] += 1\n    elif result >= 0.6:\n        rank['B'] += 1\n    elif result >= 0.2:\n        rank['C'] += 1\n    else:\n        rank['D'] += 1\n\n\ndef main(args):\n    left_rank = defaultdict(int)\n    right_rank = defaultdict(int)\n    for line in sys.stdin:\n        l, r = map(float, line.split())\n        process_data(l, left_rank)\n        process_data(r, right_rank)\n\n    print('{} {}'.format(left_rank['A'], right_rank['A']))\n    print('{} {}'.format(left_rank['B'], right_rank['B']))\n    print('{} {}'.format(left_rank['C'], right_rank['C']))\n    print('{} {}'.format(left_rank['D'], right_rank['D']))\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])\n    \nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nint main(){\n\n  double l;\n  double r;\n\n  int l_a = 0;\n  int l_b = 0;\n  int l_c = 0;\n  int l_d = 0;\n  int r_a = 0;\n  int r_b = 0;\n  int r_c = 0;\n  int r_d = 0;\n  \n  while(cin >> l >> r){\n\tif(l >= 1.1)\n\t  l_a++;\n\telse if(l >= 0.6 && l < 1.1)\n\t  l_b++;\n\telse if(l >= 0.2 && l < 0.6)\n\t  l_c++;\n\telse if(l < 0.2)\n\t  l_d++;\n\n\tif(r >= 1.1)\n\t  r_a++;\n\telse if(r >= 0.6 && r < 1.1)\n\t  r_b++;\n\telse if(r >= 0.2 && r < 0.6)\n\t  r_c++;\n\telse if(r < 0.2)\n\t  r_d++;\n\t\n  }\n\n  cout << l_a << \" \" << r_a << endl;\n  cout << l_b << \" \" << r_b << endl;\n  cout << l_c << \" \" << r_c << endl;\n  cout << l_d << \" \" << r_d << endl;\n  \n}\n\n"}
{"input": "translate Python to C++: from bisect import bisect\nref = [0.2,0.6,1.1]\nl,r = [0]*4,[0]*4\nwhile 1:\n    try:\n        le,re = map(float, raw_input().split())\n        l[bisect(ref,le)] += 1\n        r[bisect(ref,re)] += 1\n    except:\n        break\nfor i in range(1,5):\n\tprint l[-i],r[-i]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<iostream>\nusing namespace std;\n\nint main() {\n    double x,y;\n    int xs[4]={},ys[4]={};\n    while(cin>>x>>y){\n        if(x>=1.1)xs[0]++;\n        else if(x>=0.6)xs[1]++;\n        else if(x>=0.2)xs[2]++;\n        else xs[3]++;\n        if(y>=1.1)ys[0]++;\n        else if(y>=0.6)ys[1]++;\n        else if(y>=0.2)ys[2]++;\n        else ys[3]++;\n    }\n    for(int i=0;i<4;i++)\n        cout << xs[i] << ' ' << ys[i] << endl;\n    return 0;\n}"}
{"input": "translate Python to C++: lvl = [1.1, 0.6, 0.2, 0.0] \nrst = [[0]*4 for _ in range(2)]\neyes = []\nwhile True:\n    try:\n        l,r = map(float,input().strip().split())\n        eyes.append([l,r])\n    except EOFError:\n        break\n\nfor e in eyes:\n    for lr in range(2):\n        for l in range(len(lvl)):\n            if e[lr]>=lvl[l]: \n                rst[lr][l] += 1\n                break\n        else:\n            raise ValueError('Do not come here')\n\nfor lv in range(len(lvl)):\n    print(\"%d %d\" % (rst[0][lv],rst[1][lv]))\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int leye[4]={0,0,0,0},reye[4]={0,0,0,0};\n    double lef,righ;\n    while(cin>>lef>>righ){\n        if(lef==0.1)leye[0]++;else if(lef<0.6)leye[1]++;else if(lef<1.1)leye[2]++;else leye[3]++;\n        if(righ==0.1)reye[0]++;else if(righ<0.6)reye[1]++;else if(righ<1.1)reye[2]++;else reye[3]++;\n    }\n    for(int i=3;i>-1;i--)cout<<leye[i]<<\" \"<<reye[i]<<endl;\n}"}
{"input": "translate Python to C++: def f(a):\n    if a>1.0:return 0\n    elif a>0.5:return 1\n    elif a>0.1:return 2\n    else:return 3\nb=[0]*8\nwhile 1:\n    try:l,r=map(float,input().split())\n    except:break\n    b[f(l)]+=1\n    b[4+f(r)]+=1\nfor i in range(4):print(b[i],b[4+i])\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\nusing namespace std;\nint main(){\n  double l,r;\n  double ll[4] = {0},rr[4]= {0};\n  while( cin >> l >> r){\n\n    if(l >= 1.1 )ll[0]++;\n    else if(l >= 0.6 )ll[1]++;\n    else if(l >= 0.2 )ll[2]++;\n    else ll[3]++;\n    if(r >= 1.1 )rr[0]++;\n    else if(r >= 0.6 )rr[1]++;\n    else if(r >= 0.2 )rr[2]++;\n    else rr[3]++;\n  }\n  for(int i = 0 ; i < 4 ; i++){\n    cout << ll[i] <<\" \" << rr[i] << endl;\n  }\n  return 0;\n}"}
{"input": "translate Python to C++: from bisect import bisect\nD = [0.2,0.6,1.1]\nL = [0,0,0,0]\nR = [0,0,0,0]\nwhile True:\n    try:\n        left,right = map(float,raw_input().split())\n    except:\n        break\n    L[bisect(D,left)] += 1\n    R[bisect(D,right)] += 1\nfor left,right in zip(L,R)[::-1]:\n    print left,right\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<stdio.h>\nint main(void)\n{\n    float a,c;\n\tint b[8],i;\n\twhile(scanf(\"%f %f\",&a,&c)!=EOF){\n\t\tif(a>=1.1){\n\t\t\tb[0]=b[0]+1;\n\t\t}\n\t\telse if(a>=0.6){\n\t\t\tb[1]=b[1]+1;\n\t\t}\n\t\telse if(a>=0.2){\n\t\t\tb[2]=b[2]+1;\n\t\t}\n\t\telse{\n\t\t\tb[3]=b[3]+1;\n\t\t}\n\t\tif(a>=1.1){\n\t\t\tb[4]=b[4]+1;\n\t\t}\n\t\telse if(a>=0.6){\n\t\t\tb[5]=b[5]+1;\n\t\t}\n\t\telse if(a>=0.2){\n\t\t\tb[6]=b[6]+1;\n\t\t}\n\t\telse{\n\t\t\tb[7]=b[7]+1;\n\t\t}\n\t}\n\tfor(i=0;i<8;i++){\n\t    printf(\"%d %d\\n\",b[i],b[i+4]);\n\t}\n\treturn 0;\n}"}
{"input": "translate Python to C++: import sys\nLA = RA = 0\nLB = RB = 0\nLC = RC = 0\nLD = RD = 0\n\nfor i in sys.stdin:\n    l,r = map(float,i.split())\n    if l >= 1.1:\n        LA += 1\n    elif 0.6 <= l <1.1:\n        LB += 1\n    elif 0.2 <= l < 0.6:\n        LC += 1\n    else:\n        LD += 1\n\n    if r >= 1.1:\n        RA += 1\n    elif 0.6 <= r <1.1:\n        RB += 1\n    elif 0.2 <= r < 0.6:\n        RC += 1\n    else:\n        RD += 1\n\nprint(LA,RA)\nprint(LB,RB)\nprint(LC,RC)\nprint(LD,RD)\n\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<iostream>\nusing namespace std;\n\nint main(){\n\n\tint cnt[4][4] = {0};\n\tdouble l, r, sight[5];\n\n\tsight[0] = 2.1;\n\tsight[1] = 1.1;\n\tsight[2] = 0.6;\n\tsight[3] = 0.2;\n\tsight[4] = 0.0;\n\n\twhile(cin >> l >> r){\n\t\tfor(int i=0; i<4; i++){\n\t\t\tif(sight[i+1] <= l && l < sight[i]){\n\t\t\t\tcnt[0][i]++;\n\t\t\t}\n\t\t\tif(sight[i+1] <= r && r < sight[i]){\n\t\t\t\tcnt[1][i]++;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int i=0; i<4; i++){\n\t\tcout << cnt[0][i] << \" \" << cnt[1][i] << endl;\n\t}\n\n\treturn 0;\n\n}"}
{"input": "translate Python to C++: lvl = [1.1, 0.6, 0.2, 0.0] \nrst = [[0]*4 for _ in range(2)]\neyes = []\nwhile True:\n    try:\n        l,r = map(float,input().strip().split())\n        eyes.append([l,r])\n    except EOFError:\n        break\n\nfor e in eyes:\n    for lr in range(2):\n        for l in range(len(lvl)):\n            if e[lr]>=lvl[l]: \n                rst[lr][l] += 1\n                break\n        else:\n            raise ValueError('Do not come here')\n\nfor lv in range(len(lvl)):\n    print(rst[0][lv],\" \",rst[1][lv])\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0"}
{"input": "translate Python to C++: ref = [1.1,0.6,0.2,0.0]\nrank = [[0,0] for i in range(4)]\nwhile True:\n    try:\n        eye = map(float, raw_input().split())\n        for i in range(2): \n            for j in range(4):\n                if eye[i] >= ref[j]: rank[j][i] += 1\n                break\n    except:\n        break\n\n    print (\" \".join(map(str, rank[i])) for i in range(4))\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\nconst int T = 4;\nconst int E = 2;\n\nint check(double d){\n  if(d >= 1.1) return 0;\n  else if(d >= 0.6) return 1;\n  else if(d >= 0.2) return 2;\n  return 3;\n}\n\nint main() {\n  int ans[T][E];\n  REP(i, T) REP(j, E) ans[i][j] = 0;\n  double r, l;\n  while(scanf(\"%lf %lf\", &l, &r) != EOF){\n    ++ans[check(l)][0];\n    ++ans[check(r)][1];\n  }\n  REP(i, T) cout <<ans[i][0] <<\" \" <<ans[i][1] <<endl;\n  return 0;\n}"}
{"input": "translate Python to C++: lvl = [1.1, 0.6, 0.2, 0.0] \nrst = [[0]*4 for _ in range(2)]\neyes = []\nwhile True:\n    try:\n        l,r = map(float,input().strip().split())\n        eyes.append([l,r])\n    except EOFError:\n        break\n\nfor e in eyes:\n    for lr in range(2):\n        for l in range(len(lvl)):\n            if e[lr]>=lvl[l]: \n                rst[lr][l] += 1\n                break\n        else:\n            raise ValueError('Do not come here')\n\nfor lv in range(len(lvl)):\n    print(rst[0][lv],\" \",rst[1][lv])\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\nconst float eye[] = { .2f, .6f, 1.1f, (float)(1<<30) };\n\nint main() {\n  float l, r;\n  int cl[4], cr[4];\n\n  rep (i,4) cl[i] = cr[i] = 0;\n  while (cin >> l >> r) {\n    int ll = upper_bound(eye, eye + 4, l) - eye;\n    int rl = upper_bound(eye, eye + 4, r) - eye;\n    cl[3-ll]++;\n    cr[3-rl]++;\n  }\n  rep (i,4) cout << cl[i] << \" \" << cr[i] << endl;\n  return 0;\n}"}
{"input": "translate Python to C++: def calc(i):\n    if i<0.2:return 3\n    elif 0.2<=i<0.6:return 2\n    elif 0.6<=i<1.1:return 1\n    else:return 0\n\nr_ans=[0]*4\nl_ans=[0]*4\nwhile 1:\n    try:\n        l,r=map(float,raw_input().split())\n        l_ans[calc(l)]+=1\n        r_ans[calc(r)]+=1\n    except:\n        break\nfor i in xrange(4):\n    print l_ans[i],r_ans[i]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<iostream>\nusing namespace std;\n\nvoid eyeTest( double a, int* b )\n{\n    if( a >= 1.1 )\n        b[0]++;\n    else if( a >= 0.6 )\n        b[1]++;\n    else if( a >= 0.2 )\n        b[2]++;\n    else\n        b[3]++;\n}\n\nint main()\n{\n    int lj[4] = {0}, rj[4] = {0};\n    double l, r;\n\n    while( cin >> l >> r )\n    {\n        eyeTest( l, lj );\n        eyeTest( r, rj );\n    }\n    for( int i = 0; i < 4; i++ )\n        cout << lj[i] << \" \" << rj[i] << endl;\n    return 0;\n}\n"}
{"input": "translate Python to C++: def f(a):\n    if a>1.0:return 0\n    elif a>0.5:return 1\n    elif a>0.1:return 2\n    else:return 3\nb=[0]*8\nwhile 1:\n    try:l,r=map(float,input().split())\n    except:break\n    b[f(l)]+=1\n    b[4+f(r)]+=1\nfor i in range(4):print(b[i],b[4+i])\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <stdio.h>\n\n int main(void)\n {\n int d[2][4],i,j;\n double m[2];\n\n for(i=0;i<2;i++)for(j=0;j<4;j++)d[i][j]=0;\n\n while(1){\n printf(\"==>\");\n if(scanf(\"%lf %lf\",&m[0],&m[1])==EOF)break;\n for(i=0;i<2;i++){\n if(m[i]>=1.1)d[i][0]++;\n if(0.6<=m[i]&&m[i]<1.1)d[i][1]++;\n if(0.2<=m[i]&&m[i]<0.6)d[i][2]++;\n if(m[i]<0.2)d[i][3]++;\n }\n }\n\n printf(\"\\n????????????\\n\");\n for(i=0;i<4;i++){\n for(j=0;j<2;j++)printf(\"%d \",d[j][i]);\n printf(\"\\n\");\n }\n\n return 0;\n }"}
{"input": "translate Python to C++: res = [[0,0] for i in range(4)]\nwhile True:\n    try:\n        for i, v in enumerate(map(float, raw_input().split())):\n            if 1.1 <= v:\n                res[0][i] = res[0][i]+1\n            elif 0.6 <= v:\n                res[1][i] = res[1][i]+1\n            elif 0.2 <= v:\n                res[2][i] = res[2][i]+1\n            else:\n                res[3][i] = res[3][i]+1\n    except EOFError:\n        for v in res:\n            print v[0], v[1]\n        break\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\nusing namespace std;\n\n\nint main(int argc, const char * argv[]) {\n    \n    int leftArray[4] = {0},rightArray[4] = {0};\n    \n    double left,right;\n    while (cin >> left >> right) {\n        if(left >= 1.1) leftArray[0]++;\n        else if(left >= 0.6) leftArray[1]++;\n        else if(left >= 0.2) leftArray[2]++;\n        else leftArray[3]++;\n        \n        if(right >= 1.1) rightArray[0]++;\n        else if(right >= 0.6) rightArray[1]++;\n        else if(right >= 0.2) rightArray[2]++;\n        else rightArray[3]++;\n            \n    }\n    \n    for(int i=0;i<4;i++){\n        cout << leftArray[i] << \" \" << rightArray[i] << endl;\n    }\n    \n    return 0;\n}"}
{"input": "translate Python to C++: rank = [[0,0] for i in range(4)]\nwhile True:\n    try:\n        eye = map(float, raw_input().split())\n        for i in range(2):\n            if   eye[i] >= 1.1: rank[0][i] += 1\n            elif eye[i] >= 0.6: rank[1][i] += 1\n            elif eye[i] >= 0.2: rank[2][i] += 1\n            else:                   rank[3][i] += 1\n    except:\n        break\nfor i in range(4):\n    print \" \".join(map(str, rank[i]))\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <complex>\n#include <cstdlib>\n#include <cstring>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <algorithm>\n#include <functional>\n\n#define mp       make_pair\n#define pb       push_back\n#define all(x)   (x).begin(),(x).end()\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define repi(i,a,b) for(int i = (a); i < (b); i++)\n\nusing namespace std;\n\ntypedef    long long          ll;\ntypedef    unsigned long long ull;\ntypedef    vector<bool>       vb;\ntypedef    vector<int>        vi;\ntypedef    vector<vb>         vvb;\ntypedef    vector<vi>         vvi;\ntypedef    pair<int,int>      pii;\n\nconst int INF=1<<29;\nconst double EPS=1e-9;\n\nconst int dx[]={1,0,-1,0},dy[]={0,-1,0,1};\n\nint main(){\n\tdouble a,b;\n\tint la,ra,lb,rb,lc,rc,ld,rd;\n\tla=ra=lb=rb=lc=rc=ld=rd=0;\n\twhile(cin>>a>>b){\n\t\tif(a>=1.1){\n\t\t\tla++;\n\t\t}else if(a>=0.6&&a <1.1){\n\t\t\tlb++;\n\t\t}else if(a>=0.2&&a <0.6){\n\t\t\tlc++;\n\t\t}else{\n\t\t\tld++;\n\t\t}\n\t\tif(b>=1.1){\n\t\t\tra++;\n\t\t}else if(b>=0.6&&b <1.1){\n\t\t\trb++;\n\t\t}else if(b>=0.2&&b <0.6){\n\t\t\trc++;\n\t\t}else{\n\t\t\trd++;\n\t\t}\n\t}\n\tcout <<la<<\" \"<<ra<<endl;\n\tcout <<lb<<\" \"<<rb<<endl;\n\tcout <<lc<<\" \"<<rc<<endl;\n\tcout <<ld<<\" \"<<rd<<endl;\n\treturn 0;\n}"}
{"input": "translate Python to C++: c = [1.1,0.6,0.2,0.0]\nr = [[0,0] for i in range(4)]\nwhile True:\n    try:\n        e = map(float, raw_input().split())\n        for i in range(2):\n            for j in range(4):\n                if e[i] >= c[j]:\n                \tr[j][i] += 1\n                \tbreak\n    except:\n        break\nfor i in range(4):\n\tprint r[i][0],r[i][1]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main (int argc, char *argv[]) {\n    double lhs, rhs;\n    int al = 0;\n    int ar = 0;\n    int bl = 0;\n    int br = 0;\n    int cl = 0;\n    int cr = 0;\n    int dl = 0;\n    int dr = 0;\n    while (cin>>lhs>>rhs) {\n        if (lhs >= 1.1) al++;\n        if (rhs >= 1.1) ar++;\n        if (1.1 > lhs && lhs >= 0.6) bl++;\n        if (1.1 > rhs && rhs >= 0.6) br++;\n        if (0.6 > lhs && lhs >= 0.2) cl++;\n        if (0.6 > rhs && rhs >= 0.2) cr++;\n        if (0.2 > lhs && lhs >= 0.1) dl++;\n        if (0.2 > rhs && rhs >= 0.1) dr++;\n    }\n    cout<<al<<\" \"<<ar<<endl;\n    cout<<bl<<\" \"<<br<<endl;\n    cout<<cl<<\" \"<<cr<<endl;\n    cout<<dl<<\" \"<<dr<<endl;\n    return 0;\n}\n"}
{"input": "translate Python to C++: from bisect import bisect\nref = [0.2,0.6,1.1]\nl,r = [0]*4,[0]*4\nwhile 1:\n    try:\n        le,re = map(float, raw_input().split())\n        l[bisect(ref,le)] += 1\n        r[bisect(ref,re)] += 1\n    except:\n        break\nfor i in range(1,5):\n\tprint l[-i],r[-i]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\nusing namespace std;\n\nint main(){\n\tdouble left,right;\n\tint a=0,b=0,c=0,d=0;\n\tint A=0,B=0,C=0,D=0;\n\twhile(cin >> left >> right){\n\t\tif(left >= 1.1)\n\t\t\ta++;\n\t\telse if(left >= 0.6)\n\t\t\tb++;\n\t\telse if(left >= 0.2)\n\t\t\tc++;\n\t\telse\n\t\t\td++;\n\t\tif(right >= 1.1)\n\t\t\tA++;\n\t\telse if(right >= 0.6)\n\t\t\tB++;\n\t\telse if(right >= 0.2)\n\t\t\tC++;\n\t\telse\n\t\t\tD++;\n\t}\n\tcout << a << \" \" << A << endl;\n\tcout << b << \" \" << B << endl;\n\tcout << c << \" \" << C << endl;\n\tcout << d << \" \" << D << endl;\t\t\n\treturn 0;\n}"}
{"input": "translate Python to C++: r_A = 0\nr_B = 0\nr_C = 0\nr_D = 0\nl_A = 0\nl_B = 0\nl_C = 0\nl_D = 0\n\nwhile True :\n    try :\n        l, r = map(float, input().split())\n    except EOFError :\n        break\n    \n    if l >= 1.1 :\n        l_A += 1\n    elif l >= 0.6 :\n        l_B += 1\n    elif l >= 0.2 :\n        l_C += 1\n    else :\n        l_D += 1\n    if r >= 1.1 :\n        r_A += 1\n    elif r >= 0.6 :\n        r_B += 1\n    elif r >= 0.2 :\n        r_C += 1\n    else :\n        r_D += 1\n\nprint(l_A, r_A)\nprint(l_B, r_B)\nprint(l_C, r_C)\nprint(l_D, r_D)\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n#include <vector>\n#include <map>\n#include <cstring>\n#include <string>\n#include <stack>\n#include <queue>\n#include <cmath>\n#include <cstdlib>\n#include <cstdio>\n#include <algorithm>\n#include <sstream>\nusing namespace std;\n\n#define rep(i,n) for(int i=0;i<(int)n;i++)\n#define repp(i,k,n) for(int i=k;i<(int)n;i++)\n#define rei(n) for(int i=0;i<(int)n;i++)\n#define rel(n) for(int l=0;l<(int)n;l++)\n#define al(s) s.begin(),s.end()\n\ntypedef pair<int, int> pi;\ntypedef pair<pi, pi> ppi;\ntypedef pair<int, ppi> pipp;\nint a(double w)\n{\n\tif (w >= 1.1)return 0;\n\tif (w >= 0.6)return 1;\n\tif (w >= 0.2)return 2;\n\treturn 3;\n}\n\nint main()\n{\n\tint R[4] = {};\n\tint L[4] = {};\n\tdouble r, l;\n\twhile (cin >> r >> l)\n\t{\n\t\tR[a(r)]++;\n\t\tL[a(l)]++;\n\t}\n\trei(4)\n\t{\n\t\tcout << R[i] << \" \" << L[i] << endl;\n\t}\n}"}
{"input": "translate Python to C++: from bisect import bisect\nref = [0.2,0.6,1.1]\nl,r = [0]*4,[0]*4\nwhile 1:\n    try:\n        le,re = map(float, raw_input().split())\n    except:\n        break\n    l[bisect(ref,le)] += 1\n    r[bisect(ref,re)] += 1\nfor i in range(1,5):\n\tprint l[-i],r[-i]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<iostream>\nusing namespace std;\n\nint main()\n{\n\tint LA, LB, LC, LD, RA, RB, RC, RD;\n\tLA = LB = LC = LD = RA = RB = RC = RD = 0;\n\twhile (1) \n\t{\n\t\tdouble a, b;\n\t\tcin >> a >> b;\n\t\tif (cin.fail())break;\n\t\tif (a <0.2)LD++;\n\t\telse if (a < 0.6)LC++;\n\t\telse if (a < 1.1)LB++;\n\t\telse LA++;\n\t\tif (b <0.2)RD++;\n\t\telse if (b < 0.6)RC++;\n\t\telse if (b < 1.1)RB++;\n\t\telse RA++;\n\t}\n\tcout << LA << \" \" << RA << endl << LB << \" \" << RB << endl << LC << \" \" << RC << endl << LD << \" \" << RD << endl;\n}"}
{"input": "translate Python to C++: from collections import Counter\n\ndef check(f):\n  if f >= 1.1:\n    return \"A\"\n  elif f >= 0.6:\n    return \"B\"\n  elif f >= 0.2:\n    return \"C\"\n  else:\n    return \"D\"\n\ndicl = Counter()\ndicr = Counter()\nwhile True:\n  try:\n    l, r = map(float, input().split())\n    lx, rx = check(l), check(r)\n    dicl[lx] += 1\n    dicr[rx] += 1\n  except EOFError:\n    break\nfor alpha in (\"A\", \"B\", \"C\", \"D\"):\n  print(dicl[alpha], dicr[alpha])\n    \n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nint main(){\n\tvector<int> l(4,0);\n\tvector<int> r(4,0);\n\t\n\tdouble a,b;\n\twhile(cin>>a>>b){\n\t\tif(a>=1.1){\n\t\t\tl[0]++;\n\t\t}else if(a>=0.6){\n\t\t\tl[1]++;\n\t\t}else if(a>=0.2){\n\t\t\tl[2]++;\n\t\t}else{\n\t\t\tl[3]++;\n\t\t}\n\t\t\n\t\tif(b>=1.1){\n\t\t\tr[0]++;\n\t\t}else if(b>=0.6){\n\t\t\tr[1]++;\n\t\t}else if(b>=0.2){\n\t\t\tr[2]++;\n\t\t}else{\n\t\t\tr[3]++;\n\t\t}\n\t}\n\t\n\tfor(int i=0;i<4;i++)cout<<l[i]<<\" \"<<r[i]<<endl;\n\t\n\treturn 0;\n}"}
{"input": "translate Python to C++: tbl = [[0 for j in range(4)] for i in range(2)]\nwhile True:\n    try: p = list(map(float, input().split()))\n    except: break\n    for i in range(2):\n        if p[i] >= 1.1: tbl[i][0] += 1\n        elif p[i] >= 0.6: tbl[i][1] += 1\n        elif p[i] >= 0.2: tbl[i][2] += 1\n        else: tbl[i][3] += 1\nfor i in range(4):\n    print(tbl[0][i], tbl[1][i])\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\nusing namespace std;\nint seach(double in){\n\tif(in<=1.1)return 0;\n\telse if(0.6<=in)return 1;\n\telse if(0.2<=in)return 2;\n\treturn 3;\n}\n\nint main() {\n\tint r[4]={0},l[4]={0};\n\tint c=0;\n\tdouble rin,lin;\n\twhile(cin>>rin>>lin){\n\t\tc++;\n\t\tr[seach(rin)]++;\n\t\tl[seach(lin)]++;\n\t}\n\tfor(int i=0;i<4;i++){\n\t\tcout<<r[i]<<\" \"<<l[i]<<endl;\n\t}\n\t\n\treturn 0;\n}"}
{"input": "translate Python to C++: \nL = [[0 for x in range(4)] for y in range(2)]\n\nwhile True:\n    try:\n        E = [ float(x) for x in input().split()]\n        for i in range(2):\n            if E[i] >= 1.1:\n                L[i][0] += 1\n            elif E[i] >= 0.6:\n                L[i][1] += 1\n            elif E[i] >= 0.2:\n                L[i][2] += 1\n            else:\n                L[i][3] += 1\n            \n    except EOFError:\n        break\n\nfor i in range(4):\n    print(L[0][i], L[1][i])\n\n\n\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "// 2011/01/17 Tazoe\n\n#include <iostream>\n#include <string>\n#include <sstream>\nusing namespace std;\n\nint main()\n{\n\tint cnt[4][2];\n\tfor(int i=0; i<4; i++)\n\t\tfor(int j=0; j<2; j++)\n\t\t\tcnt[i][j] = 0;\n\n\twhile(!cin.eof()){\n\t\tstring str;\n\t\tgetline(cin, str);\n\t\tif(str.empty())\n\t\t\tcontinue;\n\n\t\tistringstream ist(str);\n\t\tdouble eye[2];\n\t\tist >> eye[0] >> eye[1];\n\n\t\tfor(int j=0; j<2; j++)\n\t\t\tif(eye[j]>=1.1)\n\t\t\t\tcnt[0][j]++;\n\t\t\telse if(eye[j]>=0.6)\n\t\t\t\tcnt[1][j]++;\n\t\t\telse if(eye[j]>=0.2)\n\t\t\t\tcnt[2][j]++;\n\t\t\telse\n\t\t\t\tcnt[3][j]++;\n\t}\n\n\tfor(int i=0; i<4; i++)\n\t\tcout << cnt[i][0] << ' ' << cnt[i][1] << endl;\n\n\treturn 0;\n}"}
{"input": "translate Python to C++: left = [0]*4; right = [0]*4;\nwhile 1:\n    try:\n        l,r = map(float, raw_input().split())\n        if l>0.7: l-=0.1\n        if r>0.7: r-=0.1\n        left[min(15,2+int(10*l))/4]+=1\n        right[min(15,2+int(10*r))/4]+=1\n    except EOFError:\n        break\nfor i in xrange(3,-1,-1):\n    print left[i],right[i]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <iostream>\n#include <cctype>\n#include <sstream>\n#include <string>\n#include <list>\n#include <vector>\n#include <queue>\n#include <set>\n#include <stack>\n#include <map>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <iterator>\n#include <bitset>\n#include <complex>\n#include <fstream>\nusing namespace std;\ntypedef long long ll;\nconst double EPS = 1e-9;\ntypedef vector<int> vint;\ntypedef pair<int, int> pint;\n#define rep(i, n) REP(i, 0, n)\n#define ALL(v) v.begin(), v.end()\n#define MSG(a) cout << #a << \" \" << a << endl;\n#define REP(i, x, n) for(int i = x; i < n; i++)\ntemplate<class T> T RoundOff(T a){ return int(a+.5-(a<0)); }\ntemplate<class T, class C> void chmax(T& a, C b){ if(a < b) a = b; }\ntemplate<class T, class C> void chmin(T& a, C b){ if(b < a) a = b; }\ntemplate<class T, class C> pair<T, C> mp(T a, C b){ return make_pair(a, b); }\n\nint cnv(double x)\n{\n\treturn 1.1 <= x ? 0: 0.6 <= x ? 1 : 0.2 <= x ? 2 : 3;\n}\n\nint main()\n{\n\tint x[2][4] = {0};\n    for(double a, b; cin >> a >> b; x[0][cnv(a)]++) x[1][cnv(b)]++;\n\trep(i, 4) cout << x[0][i] << \" \" << x[1][i] << endl;\n}"}
{"input": "translate Python to C++: la, lb, lc, ld = 0, 0, 0, 0\nra, rb, rc, rd = 0, 0, 0, 0\n\nwhile True:\n    try: n = input()\n    except: break\n\n    l, r = map(float, n.split())\n    \n    if 1.1 <= l:\n        la += 1\n    elif 0.6 <= l < 1.1:\n        lb += 1\n    elif 0.2 <= l < 0.6:\n        lc += 1\n    elif l < 0.2:\n        ld += 1\n    \n    if 1.1 <= r:\n        ra += 1\n    elif 0.6 <= r < 1.1:\n        rb += 1\n    elif 0.2 <= r < 0.6:\n        rc += 1\n    elif r < 0.2:\n        rd += 1\n\nprint(la, ra)\nprint(lb, rb)\nprint(lc, rc)\nprint(ld, rd)\n\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\nusing namespace std;\n\nint abl_l[4] = {0, 0, 0, 0};\nint abl_r[4] = {0, 0, 0, 0};\n\nint ability(double f) {\n\tif (f >= 1.1) return 0;\n\tif (f >= 0.6) return 1;\n\tif (f >= 0.2) return 2;\n\treturn 3;\n}\n\nint main() {\n\tdouble l, r;\n\twhile (cin >> l >> r) {\n\t\tabl_l[ability(l)]++;\n\t\tabl_r[ability(r)]++;\n\t}\n\tfor (int i = 0; i < 4; i++)\n\t\tcout << abl_l[i] << \" \" << abl_r[i] << endl;\n\treturn 0;\n}"}
{"input": "translate Python to C++: from bisect import bisect\nref = [0.2,0.6,1.1]\nl,r = [0]*4,[0]*4\nwhile 1:\n    try:\n        le,re = map(float, raw_input().split())\n        l[bisect(ref,le)] += 1\n        r[bisect(ref,re)] += 1\n    except:\n        break\nfor i in range(1,5):\n\tprint l[-i],r[-i]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<bits/stdc++.h>\nusing namespace std;\n\nint main(){\n  int sum[4][2]={0};\n  double left,right;\n  int cnt=0;\n  while(cin>>left>>right){\n    if(left>=1.1)sum[0][0]++;\n    else if(left>=0.6)sum[1][0]++;\n    else if(left>=0.2)sum[2][0]++;\n    else sum[3][0]++;\n    cnt++;\n    if(right>=1.1)sum[0][1]++;\n    else if(right>=0.6)sum[1][1]++;\n    else if(right>=0.2)sum[2][1]++;\n    else sum[3][1]++;\n  }\n  for(int i=0;i<4;i++){\n    cout<<sum[i][0]<<\" \"<<sum[i][1]<<endl;\n  }\n  return 0;\n}"}
{"input": "translate Python to C++: def check(n, array):\n    if 1.1 <= n:\n        array[0] += 1\n    elif 0.6 <= n < 1.1:\n        array[1] += 1\n    elif 0.2 <= n < 0.6:\n        array[2] += 1\n    else:\n        array[3] += 1\n\n\nleft = [0] * 4\nright = [0] * 4\nwhile 1:\n    try:\n        l, r = map(float, input().split())\n    except:\n        break\n\n    check(l, left)\n    check(r, right)\n\nfor l, r in zip(left, right):\n    print(l, r)\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <cstdio>\nint main()\n{\n    float left,right;\n    int lA=0,rA=0,lB=0,rB=0,lC=0,rC=0,lD=0,rD=0;\n    while (scanf(\"%f %f\",&left,&right)!=EOF) {\n        if (left<0.2) lD++;\n        else if (left<0.6) lC++;\n        else if (left<1.1) lB++;\n        else lA++;\n        if (right<0.2) rD++;\n        else if (right<0.6) rC++;\n        else if (right<1.1) rB++;\n        else rA++;\n    }\n    printf(\"%d %d\\n%d %d\\n%d %d\\n%d %d\\n\",lA,rA,lB,rB,lC,rC,lD,rD);\n}"}
{"input": "translate Python to C++: import sys\ndef f(x):\n  return [3,3,2,2,2,2,1,1,1,1,1,0][min(11,int(float(x)*10))]\n\nC1=[0]*4\nC2=[0]*4\nfor s in sys.stdin:\n  L, R = map(f,s.split())\n  C1[L]+=1\n  C2[R]+=1\nfor a,b in zip(C1,C2):\n  print a,b\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<iostream>\nusing namespace std;\nenum vision_rank{\n\tRANK_A = 0,\n\tRANK_B,\n\tRANK_C,\n\tRANK_D,\n\tMAX_RANK\n};\nint main()\n{\n\tint l_num[MAX_RANK] = {0,};\n\tint r_num[MAX_RANK] = {0,};\n\n\twhile(true)\n\t{\n\t\tdouble left, right;\n\t\tcin >> left >> right;\n\t\tif( cin.eof() ) break;\n\n\t\tif( left >= 1.1 ){\n\t\t\t++l_num[ RANK_A ];\n\t\t}else if( left >= 0.6 ){\n\t\t\t++l_num[ RANK_B ];\n\t\t}else if( left >= 0.2 ){\n\t\t\t++l_num[ RANK_C ];\n\t\t}else{\n\t\t\t++l_num[ RANK_D ];\n\t\t}\n\n\t\tif( right >= 1.1 ){\n\t\t\t++r_num[ RANK_A ];\n\t\t}else if( right >= 0.6 ){\n\t\t\t++r_num[ RANK_B ];\n\t\t}else if( right >= 0.2 ){\n\t\t\t++r_num[ RANK_C ];\n\t\t}else{\n\t\t\t++r_num[ RANK_D ];\n\t\t}\n\t}\n\tfor(int i = RANK_A; i < MAX_RANK; ++i){\n\t\tcout << l_num[ i ] << ' ' << r_num[ i ] << '\\n';\n\t}\n\treturn 0;\n}"}
{"input": "translate Python to C++: al,ar,bl,br,cl,cr,dl,dr=0,0,0,0,0,0,0,0\nwhile True:\n    try:\n        le,re=map(float,input().split())\n        if le<0.2:\n            dl+=1\n        if le>= 0.2 and le<0.6:\n            cl += 1\n        if le >= 0.6 and le<1.1:\n            bl += 1\n        if le >= 1.1:\n            al += 1\n        if re<0.2:\n            dr+=1\n        if re>= 0.2 and re<0.6:\n            cr += 1\n        if re >= 0.6 and re<1.1:\n            br+= 1\n        if re >= 1.1:\n            ar += 1\n    except:\n        print(al,ar)\n        print(bl,br)\n        print(cl,cr)\n        print(dl,dr)\n        break\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n#include <stdio.h>\nusing namespace std;\nint main(){\n\tint eye[2][4]={0};\n\tdouble l,r;\n\n\twhile(scanf(\"%lf %lf\",&l,&r) != EOF){\n\t\tif(l>=1.1)               eye[0][0]++;\n\t\telse if(l>=0.6 && l<1.1) eye[0][1]++;\n\t\telse if(l>=0.2 && l<0.6) eye[0][2]++;\n\t\telse if(l<0.2)           eye[0][3]++;\n\n\t\tif(r>=1.1)               eye[1][0]++;\n\t\telse if(r>=0.6 && r<1.1) eye[1][1]++;\n\t\telse if(r>=0.2 && r<0.6) eye[1][2]++;\n\t\telse if(r<0.2)           eye[1][3]++;\n\t}\n\n\tfor(int i=0;i<4;i++){\n\t\tcout<<eye[0][i]<<\" \"<<eye[1][i]<<endl;\t\t\t\n\t}\n\treturn 0;\n}"}
{"input": "translate Python to C++: a1,a2,b1,b2,c1,c2,d1,d2 =0,0,0,0,0,0,0,0\nwhile True:\n  try:\n    q,w = map(float,raw_input().split())\n    if q >= 1.1: a1+=1\n    if w >= 1.1: a2+=1\n    if 1.1 > q >= 0.6: b1+=1\n    if 1.1 > w >= 0.6: b2+=1\n    if 0.6 > q >= 0.2: c1+=1\n    if 0.6 > w >= 0.2: c2+=1\n    if q < 0.2:d1+=1\n    if w < 0.2:d2+=1\n  except EOFError: break\nif __name__ == '__main__':\n  print a1,a2\n  print b1,b2\n  print c1,c2\n  print d1,d2\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\nusing namespace std;\nint seach(double in){\n\tif(1.1<=in)return 0;\n\telse if(0.6<=in)return 1;\n\telse if(0.2<=in)return 2;\n\treturn 3;\n}\n\nint main() {\n\tint r[4]={0},l[4]={0};\n\tint c=0;\n\tdouble rin,lin;\n\twhile(cin>>rin>>lin){\n\t\tc++;\n\t\tr[seach(rin)]++;\n\t\tl[seach(lin)]++;\n\t//\tcout<<seach(rin)<<\" \"<<seach(lin)<<endl;\n\t}\n\t//cout<<endl;\n\tfor(int i=0;i<4;i++){\n\t\tcout<<r[i]<<\" \"<<l[i]<<endl;\n\t}\n\t\n\treturn 0;\n}"}
{"input": "translate Python to C++: ld, rd = [0, 0, 0, 0]. [0, 0, 0, 0]\nwhile True:\n    try:\n        l, r = map(float, input().split())\n        if l < 0.2:\n            ld[3] += 1\n        elif l < 0.6:\n            ld[2] += 1\n        elif l < 1.1:\n            ld[1] += 1\n        else:\n            ld[0] += 1\n\n        if r < 0.2:\n            rd[3] += 1\n        elif r < 0.6:\n            rd[2] += 1\n        elif r < 1.1:\n            rd[1] += 1\n        else:\n            rd[0] += 1\n\n    except:\n        break\n\nfor l, r in zip(ld, rd):\n    print(l, r)\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint LeftEyeData[4], RightEyeData[4];\nconst double EXP = 1e-13;\n\nvoid judge(const double n, int *EyeData) {\n\n\tif (n > 1.1 || fabs(n - 1.1) <= EXP) {\n\t\tEyeData[0]++;\n\t}\n\telse if (n > 0.6 || fabs(n - 0.6) <= EXP) {\n\t\tEyeData[1]++;\n\t}\n\telse if (n > 0.2 || fabs(n - 0.2) <= EXP) {\n\t\tEyeData[2]++;\n\t}\n\telse {\n\t\tEyeData[3]++;\n\t}\n}\n\nint main(void) {\n\tdouble l, r;\n\n\twhile (cin >> l >> r) {\n\t\tjudge(l, LeftEyeData);\n\t\tjudge(r, RightEyeData);\n\t}\n\n\tfor (int i = 0; i < 4; i++) {\n\t\tcout << LeftEyeData[i] << \" \" << RightEyeData[i] << endl;\n\t}\n\n\treturn 0;\n}\n"}
{"input": "translate Python to C++: eyes = [[0 for i in range(2)] for j in range(4)]\nwhile True:\n    try:\n        a = list(map(float, input().split()))\n    except:\n        break\n    for i in range(2):\n        if a[i] >= 1.1: eyes[0][i]+=1\n        elif a[i] >= 0.6: eyes[1][i]+=1\n        elif a[i] >= 0.2: eyes[2][i]+=1\n        else: eyes[3][i]+=1\nfor i in range(4):\n    print(*eyes[i])\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <iostream>\n\nusing namespace std;\n/** Problem0149 : Eye Test **/\nint main()\n{\n\tint table[2][4] = {{0}};\n\tdouble l, r;\n\t\n\twhile (cin >> l >> r) {\n\t\tif (l >= 1.1)\n\t\t\ttable[0][0]++;\n\t\telse if (l >= 0.6)\n\t\t\ttable[0][1]++;\n\t\telse if (l >= 0.2)\n\t\t\ttable[0][2]++;\n\t\telse\n\t\t\ttable[0][3]++;\n\t\t\n\t\tif (r >= 1.1)\n\t\t\ttable[1][0]++;\n\t\telse if (r >= 0.6)\n\t\t\ttable[1][1]++;\n\t\telse if (r >= 0.2)\n\t\t\ttable[1][2]++;\n\t\telse\n\t\t\ttable[1][3]++;\n\t}\n\t\n\tfor (int i=0; i<4; i++)\n\t\tcout << table[0][i] << \" \" << table[1][i] << endl;\n\t\n\treturn 0;\n}"}
{"input": "translate Python to C++: ref = [1.1,0.6,0.2,0.0]\nrank = [[0,0] for i in range(4)]\nwhile True:\n    try:\n        eye = map(float, raw_input().split())\n        for i in range(2): \n            for j in range(4):\n                if eye[i] >= ref[j]: rank[j][i] += 1\n                break\n    except:\n        break\n\n    print \" \".join(map(str, rank[i])) for i in range(4)\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <bits/stdc++.h>\n#define R(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nint main(){\n  double c,b;\n  int a[4][2];\n  while(cin>>c>>b){\n    if(c>1.0)a[0][0]++;\n    else if(c>0.5)a[0][1]++;\n    else if(c>0.1)a[0][2]++;\n    else a[0][3]++;\n    if(b>1.0)a[1][0]++;\n    else if(b>0.5)a[1][1]++;\n    else if(b>0.1)a[1][2]++;\n    else a[1][3]++;\n  }\n  R(i,4)cout<<a[i][0]<<' '<<a[i][1]<<endl;\n}"}
{"input": "translate Python to C++: al,ar,bl,br,cl,cr,dl,dr=0,0,0,0,0,0,0,0\nwhile 1:\n    try:\n        l,r=map(float,raw_input().split())\n        if l>=1.1:al+=1\n        elif 0.6<=l<1.1:bl+=1\n        elif 0.2<=l<0.6:cl+=1\n        else:dl+=1\n\n        if r>=1.1:ar+=1\n        elif 0.6<=r<1.1:br+=1\n        elif 0.2<=r<0.6:cr+=1\n        else:dr+=1\n    except EOFError:break\nprint \"{} {}\\n{} {}\\n{} {}\\n{} {}\".format(al,ar,bl,br,cl,cr,dl,dr)\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<iostream>\nusing namespace std;\nint main() {\n\tdouble l,r;\n\tint la,lb,lc,ld,ra,rb,rc,rd;\n\tla = 0;\n\tlb = 0;\n\tlc = 0;\n\tld = 0;\n\tra = 0;\n\trb = 0;\n\trc = 0;\n\trd = 0;\n\twhile (cin >> l >> r) {\n\t\tif (l >= 1.1)la += 1;\n\t\telse if (l >= 0.6)lb += 1;\n\t\telse if (l >= 0.2)lc += 1;\n\t\telse ld += 1;\n\t\tif (r >= 1.1)ra += 1;\n\t\telse if (r >= 0.6)rb += 1;\n\t\telse if (r >= 0.2)rc += 1;\n\t\telse rd += 1;\n\t}\n\tcout << la << ' ' << ra << endl;\n\tcout << lb << ' ' << rb << endl;\n\tcout << lc << ' ' << rc << endl;\n\tcout << ld << ' ' << rd << endl;\n\n}"}
{"input": "translate Python to C++: result = {\"left\": [0] * 4, \"right\": [0] * 4}\n\ndef update(value, dest):\n    if value >= 1.1: dest[0] += 1\n    elif value >= 0.6: dest[1] += 1\n    elif value >= 0.2: dest[2] += 1\n    else: dest[3] += 1\n\nwhile True:\n    try:\n        left, right = map(float, raw_input().split())\n        update(left, result[\"left\"])\n        update(right, result[\"right\"])\n    except (EOFError):\n        break\n\nfor i in range(4): print result[\"left\"][i], result[\"right\"][i]\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include<iostream>\nusing namespace std ;\n\nmain(){\n\tdouble p,q ;\n\tint cnt[4][2] = {} ;\n\twhile( cin >> p ){\n\t\tif( cin.eof() ) break ;\n\t\tcin >> q ;\n\t\t\n\t\tif( p >= 1.1 ) cnt[0][0]++ ;\n\t\telse if( p >= 0.6 ) cnt[1][0]++ ;\n\t\telse if( p >= 0.2 ) cnt[2][0]++ ;\n\t\telse cnt[3][0]++ ;\n\t\t\n\t\tif( q >= 1.1 ) cnt[0][1]++ ;\n\t\telse if( q >= 0.6 ) cnt[1][1]++ ;\n\t\telse if( q >= 0.2 ) cnt[2][1]++ ;\n\t\telse cnt[3][0]++ ;\n\t}\n\t\n\tfor( int i=0 ; i<4 ; i++ ){\n\t\tcout << cnt[i][0] << \" \" << cnt[i][1] << endl ;\n\t}\n}"}
{"input": "translate Python to C++: import sys\n\nBASE = [1.1, 0.6, 0.2, 0.0]\nCOUNT = len(BASE)\n\n\ndef eye_test(num):\n    for index, parameter in enumerate(BASE):\n        if parameter <= num:\n            return index\n\n\nleft_counter = [0] * COUNT\nright_counter = [0] * COUNT\n\nfor line in sys.stdin:\n    left, right = [float(item) for item in line[:-1].split(\" \")]\n    left_eye, right_eye = eye_test(left), eye_test(right)\n    left_counter[left_eye] += 1\n    right_counter[right_eye] += 1\n\nfor item1, item2 in zip(left_counter, right_counter):\n    print(item1, item2)\n\n\nGiven input: 1.0 1.2\n0.8 1.5\n1.2 0.7\n2.0 2.0\n\nExpected output: 2 3\n2 1\n0 0\n0 0\n", "output": "#include <algorithm>\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <memory>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\nint person[2][4];\n\nint main(){\n\tdouble n;\n\tint i=0;\n\twhile(cin>>n){\n\t\tif(n>=1.1){\n\t\t\tperson[i&1][0]++;\n\t\t}else if(n>=0.6){\n\t\t\tperson[i&1][1]++;\n\t\t}else if(n>=0.2){\n\t\t\tperson[i&1][2]++;\n\t\t}else{\n\t\t\tperson[i&1][3]++;\n\t\t}\n\t\t++i;\n\t}\n\t\n\tfor(int i=0;i<4;i++){\n\t\tprintf(\"%d %d\\n\",person[0][i],person[1][i]);\n\t}\n}"}
