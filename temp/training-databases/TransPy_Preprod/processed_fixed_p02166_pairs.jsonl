{"input": "translate Python to C++: #!usr/bin/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\ndef S():\n    res = list(sys.stdin.readline())\n    if res[-1] == \"\\n\":\n        return res[:-1]\n    return res\ndef IR(n):\n    return [I() for i in range(n)]\ndef LIR(n):\n    return [LI() for i in range(n)]\ndef SR(n):\n    return [S() for i in range(n)]\ndef LSR(n):\n    return [LS() for i in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\n\ndef solve():\n    def add(i):\n        while i <= n:\n            bit[i] += 1\n            i += i&-i\n\n    def sum(i):\n        res = 0\n        while i > 0:\n            res += bit[i]\n            i -= i&-i\n        return res\n    n,k = LI()\n    p = LI()\n    if n > k:\n        if k%2 == 0:\n            print(\"Yes\")\n        else:\n            a = 0\n            bit = [0]*(n+1)\n            for i in range(n):\n                a ^= (i-sum(p[i]))&1\n                add(p[i])\n            if a:\n                print(\"No\")\n            else:\n                print(\"Yes\")\n        return\n\n    else:\n        for i in range(n):\n            if p[i] == 1:\n                break\n        for j in range(n):\n            if p[(j+i)%n] != j+1:\n                print(\"No\")\n                return\n        print(\"Yes\")\n    return\n\n\nif __name__ == \"__main__\":\n    solve()\n\n\nGiven input: 3 3\n2 3 1\n\nExpected output: Yes\n", "output": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define ll long long\n#define ld long double\n\nll inverse(int* A, int N) {\n\tll ans = 0;\n\tll a[N + 1000] = {};\n\tfor (int i = 0; i < N; ++i) {\n\t\tfor (int j = A[i]; j; j -= (j & (-j))) ans -= a[j]; ans += i;\n\t\tfor (int j = A[i]; j <= N; j += (j & (-j))) a[j]++;\n\t}\n\treturn ans;\n}\n\nsigned main() {\n\tint n, k;\n\tcin >> n >> k;\n\n\tint p[n];\n\tfor (int i = 0; i < n; ++i) {\n\t\tint pi; cin >> pi;\n\t\tp[i] = pi;\n\t}\n\n\tbool is_sorted = true;\n\tfor (int i = 0; i < n; ++i)\n\t\tis_sorted = is_sorted && (p[i] == i + 1);\n\tif (is_sorted){\n\t\tcout << \"Yes\" << endl;\n\t\texit(0);\n\t}\n\n\tif (n == k){\n\t\tbool ok = true;\n\t\tfor (int i = 0; i < n; ++i){\n\t\t\tif (p[(i + 1) % n] != (p[i] != n ? (p[i] + 1) : 1))\n\t\t\t\tok = false;\n\t\t}\n\t\tif (ok){\n\t\t\tcout << \"Yes\" << endl;\n\t\t\texit(0);\n\t\t}\n\t\telse{\n\t\t\tcout << \"No\" << endl;\n\t\t\texit(0);\n\t\t}\n\t}\n\n\tll inv = inverse(p, n);\n\n\tif (k % 2 == 1 && inv % 2 == 1) {\n\t\tcout << \"No\" << endl;\n\t}\n\telse {\n\t\tcout << \"Yes\" << endl;\n\t}\n\n\treturn 0;\n}\n"}
